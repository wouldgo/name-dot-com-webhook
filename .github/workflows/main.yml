name: build-name-dot-com-webhook
on:
  create:
    tags:
      - ^v\d{1,}\.\d{1,}\.\d{1,}$
jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      DOCKER_REGISTRY: test
      DOCKER_IMAGE: testone
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/arm64
    steps:
    -
      id: buildx
      name: Checkout the code
      uses: actions/checkout@v2
    -
      id: buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    -
      id: prepare
      name: Prepare
      run: |
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}
        echo ::set-output name=version::${GITHUB_RUN_NUMBER}
    -
      id: build
      name: Build
      run: |
        docker build \
        --platform ${{ steps.prepare.outputs.docker_platform }} \
        --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
        --load \
        . && docker images -a
    #-
    #  name: Docker Login
    #  if: success()
    #  run: |
    #    echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
    #-
    #  name: Run Buildx (push image)
    #  if: success()
    #  run: |
    #    docker buildx build \
    #      --platform ${{ steps.prepare.outputs.docker_platform }} \
    #      --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
    #      --file ./Dockerfile \
    #      --output type=image,push=true .
    -
      name: Image digest
      run: echo ${{ steps.build }}
